" kmrhb vimrc

set nocompatible               " be iMproved 

" initialise vundle
filetype on                    " workaround for issue with default OS X vim version
filetype off                   " required for vundle

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" make vundle use git protocol
let g:vundle_default_git_proto = 'git'

" let Vundle manage Vundle
" required! 
Bundle 'gmarik/vundle'

" setup highlighting
set cursorline

" allow backspace to delete past start of insert
set backspace=indent,eol,start"

" configure vim-slime to use tmux
let g:slime_target = "tmux"

" bundles
Bundle 'altercation/vim-colors-solarized'
Bundle 'jpalardy/vim-slime'
Bundle 'vim-coffee-script'
Bundle 'SirVer/ultisnips'

" set colorscheme
set background=dark
colorscheme solarized

" toggle pastemode
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>
set showmode

" UltiSnips
" configure trigger to be tab / s-tab
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"

let g:UltiSnipsEditSplit="horizontal"

""""""""""""""""""""""""""""""
" => Statusline -- copied from julia's for now
""""""""""""""""""""""""""""""
" Always hide the statusline
set laststatus=2

" Format the statusline
set statusline=\ %{HasPaste()}%F%m%r%h\ %w\ \ CWD:\ %r%{CurDir()}%h\ \ \ Line:\ %l/%L:%c


function! CurDir()
    let curdir = substitute(getcwd(), $HOME, "~", "g")
    return curdir
endfunction

function! HasPaste()
  return 'PASTE MODE  '
    if &paste
    else
        return ''
    endif
endfunction



" detect filetypes -- required after bundles for vundle
filetype plugin indent on
syntax on
